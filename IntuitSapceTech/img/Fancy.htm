<!DOCTYPE html>
<!-- saved from url=(0038)http://localhost:8000/fancy/index.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <link rel="icon" href="http://localhost:8000/fancy/img/fav-icon.png" type="image/x-icon">
        <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
        <title>Fancy</title>

        <!-- Icon css link -->
        <link href="./Fancy_files/font-awesome.min.css" rel="stylesheet">
        <link href="./Fancy_files/style.css" rel="stylesheet">
        <link href="./Fancy_files/themify-icons.css" rel="stylesheet">
        <!-- Bootstrap -->
        <link href="./Fancy_files/bootstrap.min.css" rel="stylesheet">

        <!-- Rev slider css -->
        <link href="./Fancy_files/settings.css" rel="stylesheet">
        <link href="./Fancy_files/layers.css" rel="stylesheet">
        <link href="./Fancy_files/navigation.css" rel="stylesheet">
        <link href="./Fancy_files/animate.css" rel="stylesheet">

        <!-- Extra plugin css -->
        <link href="./Fancy_files/owl.carousel.min.css" rel="stylesheet">

        <link href="./Fancy_files/style(1).css" rel="stylesheet">
        <link href="./Fancy_files/responsive.css" rel="stylesheet">

        <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
        <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
        <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
        <![endif]-->
    <script src="./Fancy_files/cb=gapi.loaded_1" async=""></script><script src="./Fancy_files/cb=gapi.loaded_0" async=""></script><script src="./Fancy_files/bot.js" type="text/javascript"></script><link rel="stylesheet" type="text/css" href="./Fancy_files/bot.css"><style>.picker-dialog-frame{width:100%;height:100%;border:0;overflow:hidden}.picker-dialog-bg{position:absolute;top:0;left:0;background-color:#fff;z-index:1000}.picker-dialog{position:absolute;top:0;left:0;background-color:#fff;border:1px solid #acacac;width:auto;padding:0;z-index:1001;overflow:auto;-moz-box-shadow:rgba(0,0,0,.2) 0 4px 16px;-webkit-box-shadow:rgba(0,0,0,.2) 0 4px 16px;box-shadow:rgba(0,0,0,.2) 0 4px 16px}.picker-dialog-content{font-size:0;padding:0}.picker-dialog-title,.picker-dialog-buttons{display:none} </style></head>
    <body onload="init()">



        <!--================Slider Area =================-->
        <section class="main_slider_area tp-mouseover" style="overflow: visible;">
            <div id="main_slider" class="rev_slider revslider-initialised tp-simpleresponsive" data-version="5.3.1.6" style="margin-top: 0px; margin-bottom: 0px; height: 900px;" data-slideactive="rs-2946">
                <ul class="tp-revslider-mainul" style="visibility: visible; display: block; overflow: hidden; width: 1432px; height: 100%; max-height: none; left: 0px;">
                    <li data-index="rs-2946" data-transition="slidevertical" data-slotamount="1" data-hideafterloop="0" data-hideslideonmobile="off" data-easein="default" data-easeout="default" data-masterspeed="1000" data-rotate="0" data-fstransition="fade" data-fsmasterspeed="1500" data-fsslotamount="7" data-saveperformance="off" data-title="Intro" data-param1="" data-param2="" data-param3="" data-param4="" data-param5="" data-param6="" data-param7="" data-param8="" data-param9="" data-param10="" data-description="" class="tp-revslider-slidesli active-revslide" style="width: 100%; height: 100%; overflow: hidden; z-index: 20; visibility: inherit; opacity: 1; background-color: rgba(255, 255, 255, 0);">
                    <!-- MAIN IMAGE -->
                        <div class="slotholder" style="position: absolute; top: 0px; left: 0px; z-index: 0; width: 100%; height: 100%; visibility: inherit; opacity: 1; transform: matrix(1, 0, 0, 1, 0, 0);"><!--Runtime Modification - Img tag is Still Available for SEO Goals in Source - <img src="img/space2.gif" alt="" data-bgposition="center center" data-bgfit="cover" data-bgrepeat="no-repeat" class="rev-slidebg defaultimg" data-no-retina="">--><div class="tp-bgimg defaultimg " style="background-color: rgba(0, 0, 0, 0); background-repeat: no-repeat; background-image: url(&quot;img/space2.gif&quot;); background-size: cover; background-position: center center; width: 100%; height: 100%; opacity: 1; visibility: inherit; z-index: 20;" src="img/space2.gif"></div></div>
                        <!-- LAYER NR. 1 -->
                

                            <!-- LAYER NR. 11 -->
                            <div class="tp-parallax-wrap" style="position: absolute; display: block; visibility: hidden; left: 1201px; top: 127px; z-index: 15;"><div class="tp-loop-wrap" style="position:absolute;display:block;;"><div class="tp-mask-wrap" style="position: absolute; display: block; overflow: visible;"><div class="tp-caption Agency-CloseBtn rev-btn tp-withaction rs-hover-ready" id="slide-2971-layer-20" data-x="[&#39;center&#39;,&#39;center&#39;,&#39;center&#39;,&#39;center&#39;]" data-hoffset="[&#39;510&#39;,&#39;389&#39;,&#39;270&#39;,&#39;199&#39;]" data-y="[&#39;middle&#39;,&#39;middle&#39;,&#39;middle&#39;,&#39;middle&#39;]" data-voffset="[&#39;-298&#39;,&#39;-229&#39;,&#39;-163&#39;,&#39;-118&#39;]" data-width="50" data-height="none" data-whitespace="nowrap" data-type="button" data-actions="[{&quot;event&quot;:&quot;click&quot;,&quot;action&quot;:&quot;stoplayer&quot;,&quot;layer&quot;:&quot;slide-2971-layer-15&quot;,&quot;delay&quot;:&quot;&quot;},{&quot;event&quot;:&quot;click&quot;,&quot;action&quot;:&quot;stoplayer&quot;,&quot;layer&quot;:&quot;slide-2971-layer-19&quot;,&quot;delay&quot;:&quot;&quot;},{&quot;event&quot;:&quot;click&quot;,&quot;action&quot;:&quot;stoplayer&quot;,&quot;layer&quot;:&quot;slide-2971-layer-20&quot;,&quot;delay&quot;:&quot;&quot;}]" data-responsive_offset="on" data-responsive="off" data-frames="[{&quot;from&quot;:&quot;z:0;rX:0;rY:0;rZ:45deg;sX:0.9;sY:0.9;skX:0;skY:0;opacity:0;&quot;,&quot;speed&quot;:500,&quot;to&quot;:&quot;o:1;&quot;,&quot;delay&quot;:&quot;bytrigger&quot;,&quot;ease&quot;:&quot;Power3.easeInOut&quot;},{&quot;delay&quot;:&quot;bytrigger&quot;,&quot;speed&quot;:500,&quot;to&quot;:&quot;auto:auto;&quot;,&quot;ease&quot;:&quot;nothing&quot;},{&quot;frame&quot;:&quot;hover&quot;,&quot;speed&quot;:&quot;500&quot;,&quot;ease&quot;:&quot;Power1.easeInOut&quot;,&quot;to&quot;:&quot;o:1;sX:1.1;sY:1.1;rX:0;rY:0;rZ:0;z:0;&quot;,&quot;style&quot;:&quot;c:rgba(255, 255, 255, 1.00);&quot;}]" data-textalign="[&#39;center&#39;,&#39;center&#39;,&#39;center&#39;,&#39;center&#39;]" data-paddingtop="[0,0,0,0]" data-paddingright="[0,0,0,0]" data-paddingbottom="[0,0,0,0]" data-paddingleft="[0,0,0,0]" data-lasttriggerstate="reset" style="z-index: 15; min-width: 50px; max-width: 50px; white-space: nowrap; outline: none; box-shadow: none; box-sizing: border-box; cursor: pointer; font-size: 24px; visibility: hidden; transition: none; text-align: center; line-height: 50px; border-width: 0px; margin: 0px; padding: 0px; letter-spacing: 0px; font-weight: 500; min-height: 0px; max-height: none; opacity: 0.0001; transform-origin: 50% 50% 0px; transform: matrix3d(0.636396, 0.636396, 0, 0, -0.636396, 0.636396, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);"><i class="fa fa-close"></i> </div></div></div></div>

                            <div class="tp-parallax-wrap" style="position: absolute; display: block; visibility: visible; left: 0px; top: 330px; z-index: 8; min-width: 100%;"><div class="tp-loop-wrap" style="position: absolute; display: block; min-width: 100%;"><div class="tp-mask-wrap" style="position: absolute; display: block; min-width: 100%; overflow: hidden; transform: matrix(1, 0, 0, 1, 0, 0);"><div class="tp-caption tp-resizeme secand_text" data-x="[&#39;center&#39;,&#39;center&#39;,&#39;center&#39;,&#39;center&#39;,&#39;center&#39;,&#39;center&#39;]" data-hoffset="[&#39;0&#39;,&#39;0&#39;,&#39;0&#39;,&#39;0&#39;]" data-y="[&#39;middle&#39;,&#39;middle&#39;,&#39;middle&#39;,&#39;middle&#39;]" data-voffset="[&#39;0&#39;,&#39;0&#39;,&#39;0&#39;,&#39;0&#39;,&#39;0&#39;]" data-fontsize="[&#39;48&#39;,&#39;48&#39;,&#39;48&#39;,&#39;28&#39;,&#39;28&#39;,&#39;22&#39;]" data-lineheight="[&#39;60&#39;,&#39;60&#39;,&#39;60&#39;,&#39;36&#39;,&#39;36&#39;,&#39;30&#39;]" data-width="100%" data-height="none" data-whitespace="normal" data-type="text" data-responsive_offset="on" data-transform_idle="o:1;" data-frames="[{&quot;delay&quot;:10,&quot;speed&quot;:1500,&quot;frame&quot;:&quot;0&quot;,&quot;from&quot;:&quot;y:[100%];z:0;rX:0deg;rY:0;rZ:0;sX:1;sY:1;skX:0;skY:0;opacity:0;&quot;,&quot;mask&quot;:&quot;x:0px;y:[100%];s:inherit;e:inherit;&quot;,&quot;to&quot;:&quot;o:1;&quot;,&quot;ease&quot;:&quot;Power2.easeInOut&quot;},{&quot;delay&quot;:&quot;wait&quot;,&quot;speed&quot;:1500,&quot;frame&quot;:&quot;999&quot;,&quot;to&quot;:&quot;y:[175%];&quot;,&quot;mask&quot;:&quot;x:inherit;y:inherit;s:inherit;e:inherit;&quot;,&quot;ease&quot;:&quot;Power2.easeInOut&quot;}]" data-textalign="[&#39;center&#39;,&#39;center&#39;,&#39;center&#39;,&#39;center&#39;,&#39;center&#39;,&#39;center&#39;]" style="z-index: 8; font-family: Poppins, sans-serif; font-weight: 700; color: rgb(255, 255, 255); visibility: inherit; transition: none; text-align: center; line-height: 60px; border-width: 0px; margin: 0px; padding: 0px; letter-spacing: 0px; font-size: 48px; white-space: normal; min-height: 0px; min-width: 100%; max-height: none; max-width: 100%; opacity: 1; transform: matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1); transform-origin: 50% 50% 0px;" id="layer-465508640">Welcome to the Intuit Space Universe.<br><br>
Our Intuit giant is waiting to chat with you <br>Let's get going and say hello to him.
                            </div></div></div></div>
                        </li></ul><div class="tp-loader spinner0" style="display: none;"><div class="dot1"></div><div class="dot2"></div><div class="bounce1"></div><div class="bounce2"></div><div class="bounce3"></div></div><div class="tp-bannertimer" style="visibility: hidden; width: 0%;"></div></div>
                    
                    <li data-index="rs-2947" data-transition="slidevertical" data-slotamount="1" data-hideafterloop="0" data-hideslideonmobile="off" data-easein="default" data-easeout="default" data-masterspeed="1000" data-rotate="0" data-fstransition="fade" data-fsmasterspeed="1500" data-fsslotamount="7" data-saveperformance="off" data-title="Intro" data-param1="" data-param2="" data-param3="" data-param4="" data-param5="" data-param6="" data-param7="" data-param8="" data-param9="" data-param10="" data-description="">
                    <!-- MAIN IMAGE -->
                        
                    </li>
                
            
        </section>
        <!--================End Slider Area =================-->

        <!--================Creative Feature Area =================-->
        <section class="creative_feature_area">
            <div class="container">
                <div class="c_feature_box">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="c_box_item">
                                <h4><i class="fa fa-thumbs-o-up" aria-hidden="true"></i> Talk to me Now! </h4>
                                <style>
  .speech {border: 1px solid #DDD; width: 300px; padding: 0; margin: 0}
  .speech input {border: 0; width: 240px; display: inline-block; height: 30px;}
  .speech img {float: right; width: 40px }
</style>

<!-- Search Form -->
<form id="labnol" method="get" action="https://www.google.com/search">
  <div class="speech">
    <input type="text" name="q" id="transcript" placeholder="Speak">
    <img onclick="startDictation()" src="./Fancy_files/cHidSVu.gif">
  </div>
</form>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="c_box_item">
                                <h4><i class="fa fa-clock-o" aria-hidden="true"></i> I can speak different languages. Give it a try! </h4>
                                    <input type="text" name="text" id="textContent" placeholder="Enter text Here">
                                    <select id="voice" style="width:100px"><option value="Alex">Alex</option><option value="Alice">Alice</option><option value="Alva">Alva</option><option value="Amelie">Amelie</option><option value="Anna">Anna</option><option value="Carmit">Carmit</option><option value="Damayanti">Damayanti</option><option value="Daniel">Daniel</option><option value="Diego">Diego</option><option value="Ellen">Ellen</option><option value="Fiona">Fiona</option><option value="Fred">Fred</option><option value="Ioana">Ioana</option><option value="Joana">Joana</option><option value="Jorge">Jorge</option><option value="Juan">Juan</option><option value="Kanya">Kanya</option><option value="Karen">Karen</option><option value="Kyoko">Kyoko</option><option value="Laura">Laura</option><option value="Lekha">Lekha</option><option value="Luca">Luca</option><option value="Luciana">Luciana</option><option value="Maged">Maged</option><option value="Mariska">Mariska</option><option value="Mei-Jia">Mei-Jia</option><option value="Melina">Melina</option><option value="Milena">Milena</option><option value="Moira">Moira</option><option value="Monica">Monica</option><option value="Nora">Nora</option><option value="Paulina">Paulina</option><option value="Samantha">Samantha</option><option value="Sara">Sara</option><option value="Satu">Satu</option><option value="Sin-ji">Sin-ji</option><option value="Tessa">Tessa</option><option value="Thomas">Thomas</option><option value="Ting-Ting">Ting-Ting</option><option value="Veena">Veena</option><option value="Victoria">Victoria</option><option value="Xander">Xander</option><option value="Yelda">Yelda</option><option value="Yuna">Yuna</option><option value="Yuri">Yuri</option><option value="Zosia">Zosia</option><option value="Zuzana">Zuzana</option><option value="Google Deutsch">Google Deutsch</option><option value="Google US English">Google US English</option><option value="Google UK English Female">Google UK English Female</option><option value="Google UK English Male">Google UK English Male</option><option value="Google español">Google español</option><option value="Google español de Estados Unidos">Google español de Estados Unidos</option><option value="Google français">Google français</option><option value="Google हिन्दी">Google हिन्दी</option><option value="Google Bahasa Indonesia">Google Bahasa Indonesia</option><option value="Google italiano">Google italiano</option><option value="Google 日本語">Google 日本語</option><option value="Google 한국의">Google 한국의</option><option value="Google Nederlands">Google Nederlands</option><option value="Google polski">Google polski</option><option value="Google português do Brasil">Google português do Brasil</option><option value="Google русский">Google русский</option><option value="Google 普通话（中国大陆）">Google&nbsp;普通话（中国大陆）</option><option value="Google 粤語（香港）">Google&nbsp;粤語（香港）</option><option value="Google 國語（臺灣）">Google 國語（臺灣）</option></select>
                                    <br><br><button name="textToVoice" onclick="speak()">TextToVoice</button>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="c_box_item">
                                <a href="http://localhost:8000/fancy/index.html#"><h4><i class="fa fa-diamond" aria-hidden="true"></i> Wanna chat with me!!</h4></a>
        <script type="text/javascript">
        var headID = document.getElementsByTagName("head")[0];
        var newCss = document.createElement('link');
        newCss.rel = 'stylesheet';
        newCss.type = 'text/css';
        window._botUsername = '730434';
        window._botName = 'tamh';
        newCss.href = "http://rebot.me/assets/css/bot.css";
        var newScript = document.createElement('script');
        newScript.src = "http://rebot.me/assets/js/bot.js";
        newScript.type = 'text/javascript';
        headID.appendChild(newScript);
        headID.appendChild(newCss);
        </script>
                                    </div>
                        </div>
                    </div>
                </div>
                <div class="digital_feature p_100">
                    <div class="row">
                        <div class="col-lg-6">
                            <div class="d_feature_text">
                                <div class="main_title">
                                    <h2>Watch this video to know about Intuit Giant</h2>    
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="d_feature_img">
<iframe width="500" height="400" src="./Fancy_files/ktafrbsKeZw.html" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <!--================End Creative Feature Area =================-->

    
        <!--================Our Service Area =================-->
        <section class="service_area">
            <div class="container">
                <div class="center_title">
                </div>
            </div>
        </section>
        <!--================End Our Service Area =================-->

        



        <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
        <script src="./Fancy_files/jquery-3.2.1.min.js"></script>
        <!-- Include all compiled plugins (below), or include individual files as needed -->
        <script src="./Fancy_files/popper.min.js"></script>
        <script src="./Fancy_files/bootstrap.min.js"></script>
        <!-- Rev slider js -->
        <script src="./Fancy_files/jquery.themepunch.tools.min.js"></script>
        <script src="./Fancy_files/jquery.themepunch.revolution.min.js"></script>
        <script src="./Fancy_files/revolution.extension.actions.min.js"></script>
        <script src="./Fancy_files/revolution.extension.video.min.js"></script>
        <script src="./Fancy_files/revolution.extension.slideanims.min.js"></script>
        <script src="./Fancy_files/revolution.extension.layeranimation.min.js"></script>
        <script src="./Fancy_files/revolution.extension.navigation.min.js"></script>
        <script src="./Fancy_files/revolution.extension.slideanims.min.js"></script>
        <!-- Extra plugin css -->
        <script src="./Fancy_files/jquery.waypoints.min.js"></script>
        <script src="./Fancy_files/jquery.counterup.min.js"></script>
        <script src="./Fancy_files/apear.js"></script>
        <script src="./Fancy_files/countto.js"></script>
        <script src="./Fancy_files/owl.carousel.min.js"></script>
        <script src="./Fancy_files/jquery.parallax-1.1.3.js"></script>
        <!--Tweets-->
        <script src="./Fancy_files/tweetie.min.js"></script>
        <script src="./Fancy_files/script.js"></script>

        <script src="./Fancy_files/theme.js"></script>
        <script>
  function startDictation() {

    if (window.hasOwnProperty('webkitSpeechRecognition')) {

      var recognition = new webkitSpeechRecognition();

      recognition.continuous = true;
      recognition.interimResults = false;

      recognition.lang = "en-US";
      recognition.start();

      recognition.onresult = function(e) {
        document.getElementById('transcript').value
                                 = e.results[0][0].transcript;
        recognition.stop();
        document.getElementById('labnol').submit();
      };

      recognition.onerror = function(e) {
        recognition.stop();
      }

    }
  }
  /*function speak(callback) {
    text=document.getElementById("textContent").value;
    var u = new SpeechSynthesisUtterance();
    u.text = text;
    u.lang = 'en-US';
 
    u.onend = function () {
        if (callback) {
            callback();
        }
    };
 
    u.onerror = function (e) {
        if (callback) {
            callback(e);
        }
    };
 
    speechSynthesis.speak(u);
}*/
function speak(callback) {
    var voiceSelect = _getid("voice");
    var selectedVoice = null;
    if(voiceSelect) {
        selectedVoice = voiceSelect.value;
    }

    text=document.getElementById("textContent").value;
    var u = new SpeechSynthesisUtterance();
    if(selectedVoice) {
        u.voice = window.speechSynthesis.getVoices().filter(function(voice) {
        return voice.name == selectedVoice;
      })[0];
    }
    u.text = text;
    u.lang = 'en-US';
 
    u.onend = function () {
        if (callback) {
            callback();
        }
    };
 
    u.onerror = function (e) {
        if (callback) {
            callback(e);
        }
    };
 
    speechSynthesis.speak(u);
}
function doInitVoices() {
    if(!window.speechSynthesis)return;
    var voiceSelect = _getid("voice");
    for(var i=voiceSelect.options.length-1;i>=0;i--) voiceSelect.remove(i);

    var voices = window.speechSynthesis.getVoices();
    var option='';
    voices.forEach(function (voice, i) {
        var voiceName = voice.name;
        var c=document.createElement("option");
        c.value=voiceName;
        c.appendChild(document.createTextNode(voiceName));
        voiceSelect.appendChild(c);
    });
    voiceSelect.onchange=function(){
        setstorage('c_voice',this.value);
    }
    var s=getstorage('c_voice');
    if(s) voiceSelect.value=s;
    /*var msg = new SpeechSynthesisUtterance();
    msg.voice = voices[0];
    msg.text='this is a app.';
    msg.volume=100;
    window.speechSynthesis.speak(msg);*/
}
</script>
        <script>
var gadb=false;
var g_expires=1000*60*60*6;
function setstorage(name,value){
    if (window.localStorage){
        localStorage[name]=value+'';
    }else{
        //setCookie(name, value, 1000*60*60*24*365*10);
    }
}
function getstorage(name){
    var s;
    if (window.localStorage){
        s=localStorage[name];
    }else{
        //s=getCookie(name);
    }
    return s;
}
function init(){
    doInitVoices();
}
</script>
    


            <script type="text/javascript">
    google_ad_client = "ca-pub-1113541014872557";
    google_ad_slot = "9120848305";
    google_ad_width = 728;
    google_ad_height = 15;
function datetimetostring(ts){
    var t=new Date(ts);
    var s='';
    if(!isNaN(t)){
        var y=t.getFullYear();
        var m=t.getMonth()+1;
        var d=t.getDate();
        s=y+'-'+fillnumber(m)+'-'+fillnumber(d)+' '+fillnumber(t.getHours())+':'+fillnumber(t.getMinutes())+':'+fillnumber(t.getSeconds());
    }
    return s;
}
function validateURL(textval) {
    var regexp = /^(?:(ftp|http|https):\/\/)?(?:[\w-]+\.)+([a-z]{2,6}|[0-9]{1,6})/i;
    return regexp.test(textval);
}

function getFileName(url) {
  url = url.substring(0, (url.indexOf("#") == -1) ? url.length : url.indexOf("#"));
  url = url.substring(0, (url.indexOf("?") == -1) ? url.length : url.indexOf("?"));
  url = url.substring(url.lastIndexOf("/") + 1, url.length);
  return url;
}

var gfileid,gfileresp;

function proc_saveopt(){
    var b=[];
    var c;
    var obj=_getid("optcontainer");
    var a=obj.getElementsByTagName('INPUT');
    for(var i = 0; i < a.length; i++){
        if(a[i].type=='checkbox' || a[i].type=='radio'){
            c={};
            c.id=a[i].id;
            c.type=a[i].type;
            c.checked=a[i].checked;
            b.push(c);
        }else if(a[i].type=='text' || a[i].type=='number'){
            c={};
            c.id=a[i].id;
            c.type=a[i].type;
            c.value=a[i].value;
            b.push(c);
        }
    }
    var a=obj.getElementsByTagName('SELECT');
    for(var i = 0; i < a.length; i++){
        if(a[i].form && a[i].form.id){
            c={};
            c.id=a[i].id;
            c.type='select';
            c.value=a[i].value;
            b.push(c);
        }
    }

    if(window.JSON) setstorage('c_opt',JSON.stringify(b));
}
function proc_loadopt(){
    var s=getstorage('c_opt');
    var b=[];
    try{
        b=JSON.parse(s);
    }catch(err){
        b=[];
    }
    if(!b) b=[];

    var c;
    for(var i = 0; i < b.length; i++){
        if(b[i].type=='checkbox' || b[i].type=='radio'){
            c=_getid(b[i].id);
            if(c) c.checked=b[i].checked;
        }else if(b[i].type=='select' || b[i].type=='text' || b[i].type=='number'){
            c=_getid(b[i].id);
            if(c) c.value=b[i].value;
        }
    }
    /*var a=_getid("optcontainer").getElementsByTagName('*');
    for(var i = 0; i < a.length; i++){
        if(a[i].tagName=='SELECT'){
            a[i].onchange=proc_saveopt;
        }else if(a[i].type=='checkbox'){
            a[i].onclick=proc_saveopt;
        }
    }*/
}
</script>

        <script src="./Fancy_files/jquery.min.js"></script>
        <script src="./Fancy_files/all513.js"></script>
        <link rel="stylesheet" href="./Fancy_files/codemirror.css">
        <style>
            .searched {
            background: #ffa;
            background: rgba(255, 255, 0, .4);
            }
            .CodeMirror {
            line-height: 1.1;
            border: 1px solid #CDDCED;
            }
            .breakpoints {width: .8em;}
            .CodeMirror-composing { border-bottom: 0px solid !important; }
            .CodeMirror-linenumber { min-width: 19px !important;}
        </style>

<style>
    a.bottomlink:link{text-decoration:underline;}
    a.bottomlink:visited{text-decoration:underline;}
    a.bottomlink:active{text-decoration:underline;}
    a.bottomlink:hover{text-decoration:underline;}
</style>

<script>
var gmaxlength=600000;
var editor;







function proc_stop(useract){
    gstop=true;
    pauseResume = 'R';
    if(window.speechSynthesis){
        window.speechSynthesis.cancel();
    }
    proc_controls();
    if(useract){
        var b=editor.getCursor();
        if(b) editor.setCursor(b);
        else editor.setCursor(0);
    }
}
function proc_controls(){
    /*var btn_speak=_getid('btn_speak');
    var btn_pause=_getid('btn_pause');
    var btn_stop=_getid('btn_stop');
    if(window.speechSynthesis.speaking){
        btn_speak.disabled=true;
        btn_pause.disabled=false;
        btn_stop.disabled=false;
    }else{
        btn_speak.disabled=false;
        btn_pause.disabled=true;
        btn_stop.disabled=true;
    }*/
}

function initSpeech(){
    if(!window.speechSynthesis){
        _getid('msg2').innerHTML='<font style="color:#aa2222">Sorry your browser does not support speech synthesis. This app works well in the latest browser.</font>';
        return;
    }
    //proc_controls();
    //var a=_getid('controls').getElementsByTagName('BUTTON');
    //for(var i = 0; i < a.length; i++){
       // a[i].disabled=false;
    //}
    //var msg = new SpeechSynthesisUtterance('');
    //window.speechSynthesis.cancel();
}
function doInitVoices() {
    if(!window.speechSynthesis)return;
    var voiceSelect = _getid("voice");
    for(var i=voiceSelect.options.length-1;i>=0;i--) voiceSelect.remove(i);

    var voices = window.speechSynthesis.getVoices();
    var option='';
    voices.forEach(function (voice, i) {
        var voiceName = voice.name;
        var c=document.createElement("option");
        c.value=voiceName;
        c.appendChild(document.createTextNode(voiceName));
        voiceSelect.appendChild(c);
    });
    voiceSelect.onchange=function(){
        setstorage('c_voice',this.value);
    }
    var s=getstorage('c_voice');
    if(s) voiceSelect.value=s;
    /*var msg = new SpeechSynthesisUtterance();
    msg.voice = voices[0];
    msg.text='this is a app.';
    msg.volume=100;
    window.speechSynthesis.speak(msg);*/
}
initSpeech();
</script>
<script>
var CLIENT_ID = '682483387302-b70hsjk46f1k1rvh0rrerth7umhhd9l1.apps.googleusercontent.com';
var SCOPES = [
    'https://www.googleapis.com/auth/drive.install',
    'https://www.googleapis.com/auth/drive.file'
];
var gd_developerKey='AIzaSyCoiOpQgI9N_iW1kJmOLz9dbTKZtR4Qino';
var gd_mimetype="";
var gd_export_extension=["text/plain","text/csv","application/json"];
var gd_state='';

var gd_picker,gd_loaded,gd_pickerloaded,gd_lastprogress,gd_issupported,gd_isdownloading,gd_load_timer,gd_bloburl,gd_state2;
var gd_loginexp=0;
var gd_callback;
var ismsie=false;
if(navigator.appName!="Netscape"){
    if(navigator.userAgent.indexOf("MSIE")>=0) ismsie=true;
}

function gd_btn_login2(e,callback){
    function go(a){
        if(a && a.style.display==''){
            var x=getScrollLeft()+((getWindowWidth()-a.clientWidth) / 2);
            var y=getScrollTop()+((getWindowHeight()-a.clientHeight) / 2);
            a.style["border"]="1px solid #000000";
            a.style["padding"]="10px";
            a.style.left=x+"px";
            a.style.top=y+"px";
        }
    }
    go(_getid("gd_btn_login"));
    go(_getid("gd_window"));
    setTimeout(function(){
        go(_getid("gd_btn_login"));
        go(_getid("gd_window"));
        if(callback)callback();
    },10);
}
function gd_btn_login(isshow){
    var a=_getid("gd_btn_login");
    if(isshow){
        a.style.display='';
        gd_btn_login2();
    }else{
        a.style.display='none';
    }
}
function gd_login_close(){
    gd_btn_login(false);
    gd_state='';
}
function gd_login_manual(){
    var p={'client_id': CLIENT_ID, 'scope': SCOPES.join(' '), 'immediate': false};
    if(gd_userId){p['login_hint']=gd_userId;p['authuser']=-1;}
    gapi.auth.authorize(p, function (authResult){
        if (authResult && !authResult.error){
            gd_loginexp=(new Date()).getTime()+parseInt(authResult.expires_in*0.7*1000);
            gd_btn_login(false);gd_info();
            show_message("Login ok!!");
            if(gd_callback) gd_callback(true);
            else gd_open_state(true);
        }else{
            gd_btn_login(true);
            show_message("Login failed!!");
        }
    });
}
function gd_login(callback,react){
    if(gd_loginexp==0 || gd_loginexp<(new Date()).getTime()){
    }else{
        callback(true);
        return;
    }
    var p={'client_id': CLIENT_ID, 'scope': SCOPES.join(' '), 'immediate': true};
    if(gd_userId){p['login_hint']=gd_userId;p['authuser']=-1;}
    gapi.auth.authorize(p, function (authResult){
        if (authResult && !authResult.error){
            gd_loginexp=(new Date()).getTime()+parseInt(authResult.expires_in*0.7*1000);
            gd_btn_login(false);gd_info();
            callback(true);
        }else{
            show_message("Login failed!!");
            gd_btn_login(true);
            callback(false);
            if(react) gd_callback=callback;
            else gd_callback=null;
        }
    });
}

function gd_loadpicker() {
    gapi.load('picker',{'callback': function(){
            gd_pickerloaded=true;
        }
    });
}
function gd_createpicker() {
    var access_token=gapi.auth.getToken().access_token;
    if(!access_token){
        alert('Error!! No access token.');
        return;
    }
    if(!gd_picker){
      var view2 = new google.picker.DocsView(google.picker.ViewId.DOCS);
      if(gd_mimetype) view2.setMimeTypes(gd_mimetype);
      view2.setMode(google.picker.DocsViewMode.LIST);

        var view4 = new google.picker.DocsView();
        view4.setIncludeFolders(true);
        view4.setParent("root");
        view4.setMimeTypes(gd_mimetype);
        view4.setMode(google.picker.DocsViewMode.LIST);
        var view5 = new google.picker.View(google.picker.ViewId.RECENTLY_PICKED);

      gd_picker = new google.picker.PickerBuilder()
          //.enableFeature(google.picker.Feature.NAV_HIDDEN)
          //.enableFeature(google.picker.Feature.MULTISELECT_ENABLED)
          .setLocale("en") //window.navigator.language || window.navigator.userLanguage || "en"
          .setAppId(CLIENT_ID.split("-")[0]) //scope
          .setOAuthToken(access_token)
          .addView(view2)
          .addView(view4)
          .addView(view5)
          .addView(new google.picker.DocsUploadView())
          .setDeveloperKey(gd_developerKey)
          .setCallback(gd_pickercallback)
          .build();
    }
    gd_picker.setVisible(true);
}
function gd_pickercallback(data) {
    if (data.action == google.picker.Action.PICKED) {
        if(data.docs && data.docs.length>0 && data.docs[0].id){
            var fileId = data.docs[0].id;
            gd_loadfile(fileId);
        }
    }
}

var gexportlist=[];
function gd_loadfile(fileId){
    if(gadb){alert('Please disable the adblock for free use.');return;} if(gd_isdownloading){
        alert("It's working. Please try again in a few minutes. or Cancel the current download.");
        return;
    }
    _getid("downlink").innerHTML="<table><tr><td><div id='gd_progress'>Ready...</div></table>";
    gapi.client.load('drive', 'v2', function() {
        var request = gapi.client.drive.files.get({
            'fileId': fileId
        });
        request.execute(function(resp){
            function end(){
                gd_isdownloading=false;
                clearTimeout(messagetimer);
                hide_message();
                var a=_getid("downlink");
                if(a.innerHTML && a.innerHTML.indexOf("adownlink")<0){
                    _getid("downlink").innerHTML='';
                }
            }
            function error(s){
                alert(s);
            }
            //console.log(resp);

            var downloadurl;
            if(resp.downloadUrl){
                downloadurl=resp.downloadUrl;
                go();
            }else if(resp.exportLinks){
                /*for (x in resp.exportLinks){
                    for(var i = 0; i < gd_export_extension.length; i++){
                        if(x.toLowerCase().indexOf(gd_export_extension[i])>=0){
                            downloadurl=resp.exportLinks[x];
                            resp.fileExtension=gd_export_extension[i];
                            break;
                        }
                    }
                    if(downloadurl)break;
                }*/

                gexportlist=[];
                for (x in resp.exportLinks){
                    var a={};
                    a.title=resp.title;
                    a.name=x;
                    a.url=resp.exportLinks[x] || '';
                    var match=a.url.match(/(exportFormat=|format=)(.*?)(&|$)/i);
                    if(match) a.ext=match[2];
                    gexportlist.push(a);
                }
                if(gexportlist.length>0) downloadurl="ok";
                go();

            }else{go();}

          function go(){
            var accessToken = gapi.auth.getToken().access_token;
            if(!accessToken){
                end();
                alert('Error!! No access token.');
                return;
            }
            if(downloadurl){
                    function getsize(){
                        function humanFileSize(bytes){
                            var thresh = 1024;
                            if(bytes < thresh) return bytes + ' B';
                            var units = ['kB','MB','GB','TB','PB','EB','ZB','YB'];
                            var u = -1;
                            do {
                                bytes /= thresh;
                                ++u;
                            } while(bytes >= thresh);
                            return bytes.toFixed(1)+' '+units[u];
                        }
                        var s;
                        if(!resp.fileSize) s=' (Unknown Size)';
                        else s=' ('+humanFileSize(resp.fileSize)+')';
                        return s;
                    }
                    function setdown(url){
                        var s,s1;
                        if(resp.title){
                            s=resp.title || '';
                            s1=resp.title || '';
                        }else{
                            s='No Name';
                            s1=s;
                        }

                        gfileresp=resp;
                        _getid("btn_go").disabled=false;

                        var vlink='';
                        if(resp.alternateLink || resp.webContentLink) vlink='<a href="'+(resp.alternateLink || resp.webContentLink)+'" target="_blank" title="View or Edit on Google Drive">View or Edit</a>&nbsp; ';
                        if(resp.exportLinks){
                            var prefer=getstorage('c_prefer_ext');
                            s='<select id="adownsel" style="width:500px;margin-bottom:1px">';
                            for(var i = 0; i < gexportlist.length; i++){
                                s+='<option value="'+i+'"';
                                if(gexportlist[i].ext){
                                    if(gexportlist[i].ext==prefer) s+=' selected';
                                    s+='>(.'+gexportlist[i].ext+') ';
                                }else{
                                    s+='>';
                                }
                                s+=gexportlist[i].name;
                            }
                            s+='</select><br><a id="adownlink" style="font-size:19px;display:none">Download this file</a>&nbsp; '+vlink+'Export from Google document format.';
                            _getid("downlink").innerHTML=s;
                            var a=_getid("adownsel");
                            if(a){
                                a.onchange=function(){
                                    if(!this.value)return;
                                    var d=gexportlist[this.value];
                                    if(!d)return;
                                    setstorage('c_prefer_ext',d.ext);
                                    var a=_getid("adownlink");
                                    if(a){
                                        a.href=d.url;
                                        var s=d.title || '';
                                        if(d.ext) s+='.'+d.ext;
                                        a.download=s;
                                        a.title=s;
                                        a.style.display='';
                                        _getid("msg").innerHTML=html_entity_encode(s);
                                    }
                                }
                                a.onchange();
                            }
                            return;
                        }

                        _getid("downlink").innerHTML='<a id="adownlink" style="font-size:19px">Download this file</a>'+getsize()+'&nbsp; '+vlink+"";
                        var a=_getid("adownlink");
                        if(a){
                            a.href=url;
                            a.download=s;
                            a.title=s;
                            _getid("msg").innerHTML=html_entity_encode(s);
                        }
                    }

                    gd_isdownloading=true;
                    _getid("downlink").innerHTML="<table><tr><td><img src='images/wait.gif' align='absmiddle'><td><div id='gd_progress'>Downloading...</div></table>";
                    setTimeout(function(){
                        end();
                        if(resp.exportLinks){
                            setdown();
                        }else{
                            setdown(downloadurl+'&access_token='+encodeURIComponent(accessToken));
                        }
                    },300);
            }else{
                end();
                if(resp.error && resp.error.message){
                    alert(resp.error.message);
                }else{
                    alert('Error!! Can not find a download URL.');
                }
            }
          }
        });
    });
}
function gd_open_picker(){
    if(!gd_issupported){
        alert("This browser does not support.");
        return;
    }
    if(!gd_loaded || !gd_pickerloaded){
        if(!gd_load_timer) gd_loadscript(gd_open_picker);
        else alert('Not loaded library. Please try again in a few minutes.');
        return;
    }
    gd_login(function(result){
        if(!result) return;
        gd_createpicker();
    },true);
}
function gd_getparam(s,name){
    name=name+"=";
    name=name.toLowerCase();
    var p1=s.toLowerCase().indexOf(name);
    if (p1<0) return "";
    s=s.substr(p1+name.length);
    var p2=s.toLowerCase().indexOf("&");
    if (p2>=0) {
        return s.substr(0,p2);
    } else {
        return s;
    }
}
function gd_open_state(force){
    var s=gd_state;
    if(s){
        if(!gd_issupported){
            gd_state='';
            alert("This browser does not support.");
            return;
        }
        s=decodeURIComponent(s);
        try{
            var a=JSON.parse(s);
            var fileId;
            if(a.ids) fileId=a.ids[0];
            if(!fileId && a.exportIds) fileId=a.exportIds[0];
            if(fileId){
                gd_login(function(result){
                    if(gd_open2 && !force)return;
                    gd_open2=true;
                    if(!result) return;
                    //_getid('gd_btn_reopen').style.display='';
                    gd_state='';
                    gd_loadfile(fileId);
                });
            }
        }catch(err){
        }
    }
}
function gd_clientload(){
    gd_loaded=true;
    if (window.addEventListener){
        window.addEventListener("resize", gd_btn_login2, false);
    }else if (window.attachEvent){
        window.attachEvent("onresize", gd_btn_login2);
    }
    gd_open_state();
}
var gd_open2;
function gd_open_state2(){
    setTimeout(function(){
        if(!gd_open2)gd_open_state();
    }, 1000);
}

function gd_loadscript(callback){
    function inject(s){
        var o = document.createElement('scri' + 'pt');
        o.setAttribute('src', s);
        o.setAttribute('type', 'text/javascript');
        document.body.appendChild(o);
    }
    if(gd_load_timer)return;
    if(gd_loaded && gd_pickerloaded)return;
    gd_load_timer=setInterval(function(){
        if(gd_loaded && gd_pickerloaded){
            clearInterval(gd_load_timer);
            if(callback) callback();
        }
    },100);
    inject('https://apis.google.com/js/client.js?onload=gd_clientload');
    inject('https://apis.google.com/js/api.js?onload=gd_loadpicker');
}
function gd_dblclick(){
    function dblclick(){
        try{
            if(gd_picker)gd_picker.setVisible(false);
        }catch(err){}
    }
    function keydown(e){
        if(!e)e=window.event;
        if(e && e.keyCode==27) dblclick();
    }
    if(window.addEventListener){
        document.addEventListener("dblclick", dblclick, false);
        document.addEventListener("keydown", keydown, false);
    }else if(window.attachEvent){
        document.attachEvent("ondblclick", dblclick);
        document.attachEvent("onkeydown", keydown);
    }
}
var gd_userId,gd_email;
function gd_weburl(){
    var s;
    if(gd_email) s='https://drive.google.com/?authuser='+gd_email;
    else s='https://drive.google.com/';
    return s;
}
function gd_info(){
    if(gd_email)return;
    gapi.client.load('drive', 'v2', function(){
        var request = gapi.client.drive.about.get();
        request.execute(function(resp) {
            if(resp && resp.user){
                if(gd_email)return;
                gd_email=resp.user.emailAddress;
                if(gd_email){
                    var a=_getid('btn_open');
                    var b=_getid('gd_btn_reopen');
                    if(a)a.title=a.title+' ('+gd_email+')';
                    if(b)b.title=b.title+' ('+gd_email+')';
                }
            }
        });
    });
}
function gd_init(){
    gd_dblclick();
    gd_state2=gd_state;
    if(!window.XMLHttpRequest || !window.JSON){//!window.FileReader || !window.URL ||
    }else{
        gd_issupported=true;
        if(gd_state){
            try{
                var a=JSON.parse(gd_state);
                gd_userId=a.userId;
                if(a.ids || a.exportIds){
                    _getid("downlink").innerHTML="<table><tr><td><div id='gd_progress'>Ready...</div></table>";
                }
            }catch(err){}
        }
        if(window.addEventListener) window.addEventListener("load", gd_open_state2, false);
        else if (window.attachEvent) window.attachEvent("onload", gd_open_state2);
        gd_loadscript();
    }
}
gd_init();


function retrieveAllFiles(query,callback) {
  var retrievePageOfFiles = function(request, result) {
    request.execute(function(resp) {
      result = result.concat(resp.items);
      var nextPageToken = resp.nextPageToken;
      if (nextPageToken) {
        request = gapi.client.drive.files.list({
          'q': query, 'pageToken': nextPageToken,
        });
        retrievePageOfFiles(request, result);
      } else {
        callback(result);
      }
    });
  }
  var initialRequest = gapi.client.drive.files.list({
        'q': query
       });
  retrievePageOfFiles(initialRequest, []);
}

function proc_delete(f){
    var fileid=f.getAttribute("data");
    if(!fileid) return;
    var answer=confirm("Are you sure?");
    if(!answer) return;

    _getid('output').innerHTML='<img src="images/wait.gif" align="absmiddle"> Deleting...';
    var request = gapi.client.drive.files['delete']({
        'fileId': fileid
    });
    request.execute(function(resp){
        var s;
        if(resp.result && !resp.message){
            s='<font style="color:green">File deleted successfully. '+f.getAttribute('data')+'</font>';
        }else{
            s='<font style="color:red">Delete failed. <font color=green>'+resp.message+'</font> '+f.getAttribute('data')+'</font>';
        }
        _getid("output").innerHTML=s;
    });
}

function get_templist(){
    var s=getstorage('c_templist');
    var a=[];
    try{
        a=JSON.parse(s);
    }catch(err){
        a=[];
    }
    if(!a)a=[];
    return a;
}

var gworking;
function proc_go(){
    if(!gfileresp)return;

    if(!gd_issupported){
        alert("This browser does not support.");
        return;
    }
    if(!gd_loaded || !gd_pickerloaded){
        alert('Not loaded library. Please try again in a few minutes.');
        return;
    }
    if(gworking){alert("It's working. Please try again later.");return;}

    function checktext(s){
        for(var i = 0; i < gd_export_extension.length; i++){
            if(gd_export_extension[i]==s) return true;
        }
    }

    var fileid, gresp, nodelete;
    if(gfileresp.exportLinks || checktext(gfileresp.mimeType) || _getid("c_noconvert").checked){
        nodelete=true;
        gresp=JSON.parse(JSON.stringify(gfileresp));
        download();
        return;
    }else{
        fileid=gfileresp.id;
    }

    gd_login(function(result){
        if(!result) return;
        gapi.client.load('drive', 'v2', function(){
            go();
        });
    });

    function go(){
        if(gworking){alert("It's working. Please try again later.");return;}
        gworking=true;
        var title='DriveTTS_Convert_Temp_'+(new Date()).getTime();
        var body = {'title': title};
        //if(document.f1.folderid.value) body.parents=[{"id": document.f1.folderid.value}];
        body.parents=[{"id": "root"}];
        var request = gapi.client.drive.files.copy({
            'fileId': fileid,
            'convert': true,
            'resource': body
        });
        _getid("output").innerHTML='<img src="images/wait.gif" align="absmiddle"> Converting... Please do not leave this page until the conversion has completed.';
        request.execute(function(resp) {
            gresp=resp;
            //console.log(resp);
            if(resp.id){
                var a=get_templist();
                a.push(resp.id);
                setstorage('c_templist',JSON.stringify(a));
            }
            var s;
            if(resp.error){
                s='<font style="color:green">Error. </font>';
                if(resp.error.message) s+=resp.error.message+' ';
                if(resp.error.code==401){
                    s+='Login or Authorize Error.';
                }else if(resp.error.code==400){
                    s+='(There seems to be an error in converting.)';
                }
                //error(s);
                end();
                _getid("output").innerHTML=s;
            }else{
                /*var link=resp.alternateLink || resp.webContentLink;
                s='<font style="color:green">File saved successfully.</font> <a href="'+link+'" target="_blank" class="entrytitle">File Link</a>';
                var p=resp.parents;
                if(p && p[0] && p[0].id) s+=' &nbsp;<a href="https://drive.google.com/#folders/'+p[0].id+'" target="_blank" class="entrytitle" title="Show Folder">Folder</a>';
                s+=' &nbsp;<a href="#" data="'+resp.id+'"onclick="proc_delete(this);return false;" class="entrytitle">Delete</a>';   */
                s='Downloading texts...';
                _getid("output").innerHTML=s;
                setTimeout(function(){download(true,0);},1200);
            }
        });
    }

    function end(){
        gworking=false;
        if(!nodelete) _delete();
        _getid("output").innerHTML='<font style="color:green">Completed.</font>';
    }
    function error(s){
        alert(s);
    }

    function _delete(){
        if(!gresp || !gresp.id)return;
        _getid('output').innerHTML='<img src="images/wait.gif" align="absmiddle"> Deleting...';
        var request = gapi.client.drive.files['delete']({
            'fileId': gresp.id
        });
        request.execute(function(resp){
            _deletecheck(gresp.id);
        });
    }
    function _deletecheck(oid){
        function _delact(){
            var arr=get_templist();
            if(arr.length==0){
                return;
            }
            if(arr[0]==oid){
                arr.splice(0,1);
                setstorage('c_templist',JSON.stringify(arr));
                _delact();
                return;
            }
            var request = gapi.client.drive.files['delete']({
                'fileId': arr[0]
            });
            request.execute(function(resp){
                arr.splice(0,1);
                setstorage('c_templist',JSON.stringify(arr));
                _delact();
            });
        }
        _delact();
    }

    function download(useretry,retrycount){
            gworking=true;
            var downloadurl;
            var resp=gresp;
            if(resp.downloadUrl){
                downloadurl=resp.downloadUrl;
            }else if(resp.exportLinks){
                for(var i = 0; i < gd_export_extension.length; i++){
                    for (x in resp.exportLinks){
                        if(x.toLowerCase().indexOf(gd_export_extension[i])>=0){
                            downloadurl=resp.exportLinks[x];
                            break;
                        }
                    }
                    if(downloadurl)break;
                }
            }
            if(!downloadurl){
                end();
                alert('Error!! Can not find a download URL for text-type file.');
                return;
            }
            var accessToken = gapi.auth.getToken().access_token;
            if(!accessToken){
                end();
                alert('Error!! No access token.');
                return;
            }
            _getid("output").innerHTML="<table><tr><td><img src='images/wait.gif' align='absmiddle'><td><div id='gd_progress2'>Downloading...</div><td>&nbsp; <a href='#' id='gd_cancel2' style='font-size:15px;display:none'>Cancel</a></table>";
                try{
                    var xhr = new XMLHttpRequest();
                    var c=_getid('gd_cancel2');
                    if(c){
                        c.style.display='';
                        c.onclick=function(){
                            xhr.abort();
                            end();
                            return false;
                        }
                    }
                    gd_lastprogress=(new Date()).getTime();
                    var su=downloadurl+'&access_token='+encodeURIComponent(accessToken);
                    if(resp.mimeType=='application/vnd.google-apps.spreadsheet'){
                        su='https://speedtesting.herokuapp.com/proxyrss/geturl2.php?max=12&url='+encodeURIComponent(su);
                    }
                    xhr.open('GET', su);
                    xhr.onprogress=function(event){
                        if(gd_lastprogress){
                            var elaspetime = new Date();
                            var dt=(elaspetime.getTime()-gd_lastprogress)/1000;
                            if(dt<1)return;
                            gd_lastprogress=elaspetime.getTime();
                        }
                        var a=event;
                        var total=a.totalSize || resp.fileSize || 0;//a.total
                        var current=a.position || a.loaded  || 0;
                        var c=_getid('gd_progress2');
                        if(c) c.innerHTML='Downloading... ('+number_format(current)+'/'+number_format(total)+')';
                    };
                    //xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);
                    xhr.onload = function(){
                        if((this.status==404 || (this.status == 200 && resp.mimeType=='application/vnd.google-apps.spreadsheet' && (this.response || '').length==0)) && useretry && retrycount<=2){
                            retrycount++; setTimeout(function(){download(true,retrycount);},1000);
                            return;
                        }
                        end();
                        if(this.status == 200){
                            var s=this.response || '';
                            if(resp.mimeType=='application/vnd.google-apps.spreadsheet' && s.length==0){
                                error('This file is invalid file, or It exceeds the file size limit. The maximum download size is about 12 megabytes for google spreadsheet format.');
                                return;
                            }
                            /*if(this.response.length>2*1000*1000){
                                alert('The file size is too large to edit. (around 2 MB limit)');
                                return;
                            }*/
                            if(s.length>gmaxlength) s=s.substr(0,gmaxlength);
                            if(editor) editor.setValue(s);
                        }else{
                            var s="Error (status) " + this.status + "("+this.statusText+") occurred while receiving the file.";
                            error(s);
                        }
                    };
                    xhr.onerror = function(e){
                        if(e.target && e.target.status==404 && useretry && retrycount<=2){
                            retrycount++; setTimeout(function(){download(true,retrycount);},1000);
                            return;
                        }
                        end();
                        var s="Error " + e.target.status + " occurred while receiving the file.";
                        error(s);
                    };
                    xhr.send();
                }catch(err){
                    end();
                    alert(err+'\n\nor This browser does not support. Please upgrade your browser.');
                }
    }
}
setTimeout(function() {
    doInitVoices();
}, 700);
doInitVoices();
</script><script src="./Fancy_files/client.js" type="text/javascript" gapi_processed="true"></script><script src="./Fancy_files/api.js" type="text/javascript" gapi_processed="true"></script>


    

<div><div id="_chatBubble">                                 <div class="_bubble-label">                                     <h4 class="bot-title"> tamh </h4>                                 </div>                             </div>                             <div id="chatWindow" class="_disable basicAvatar1 basicAvatar2 basicAvatar3 basicAvatar4 basicAvatar5 basicAvatar6 basicAvatar7">                                 <div id="chatWindow-header">                                     <h1 class="bot-title"> tamh </h1>                                     <span class="chatWindow-close caret"></span>                                 </div>                             </div></div></body></html>